<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <groupId>org.pistachio</groupId>
    <artifactId>parent</artifactId>
    <version>0.0.1</version>
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <organization>
        <name>Pistachio（单曲循环）</name>
    </organization>
    <developers>
        <developer>
            <id>SingleCycle</id>
            <name>李沛恒</name>
            <organization>${project.organization.name}</organization>
            <email>1019844337@qq.com</email>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <!-- Spring全家桶依赖版本 -->
        <spring.test.version>5.1.0.RELEASE</spring.test.version>
        <spring.serial.version>5.0.9.RELEASE</spring.serial.version>
        <spring-boot-starter-serial.version>2.0.5.RELEASE</spring-boot-starter-serial.version>
        <spring-cloud-starter-serial.version>2.1.0.RELEASE</spring-cloud-starter-serial.version>
        <spring-cloud-bus.version>2.0.0.RELEASE</spring-cloud-bus.version>
        <spring-boot-starter-quartz.version>2.1.0.M1</spring-boot-starter-quartz.version>
        <spring-boot-starter-email.version>2.1.0.M1</spring-boot-starter-email.version>
        <spring-boot-starter-web.version>2.0.5.RELEASE</spring-boot-starter-web.version>
        <spring-boot-starter-webflux.version>2.1.5.RELEASE</spring-boot-starter-webflux.version>
        <spring-boot-starter-websocket.version>2.1.5.RELEASE</spring-boot-starter-websocket.version>
        <compiler.version>3.7.0</compiler.version>
        <hikariCP.version>3.2.0</hikariCP.version>
        <druid.version>1.1.2</druid.version>
        <mysql-connector-java.version>8.0.16</mysql-connector-java.version>
        <mybatis-spring-boot-starter.version>2.1.0</mybatis-spring-boot-starter.version>
        <mybatis-plus.version>3.1.0</mybatis-plus.version>
        <lombok.version>1.18.8</lombok.version>
        <sharding-jdbc.version>2.0.3</sharding-jdbc.version>
        <sharding-jdbc-orchestration>3.1.0</sharding-jdbc-orchestration>
        <LocalMavenRepositoryPath>D:\MavenRepository</LocalMavenRepositoryPath>
        <jdk.version>1.8</jdk.version>
    </properties>

    <!-- 依赖版本同意管理 -->
    <!-- Spring-core等是Spring体系的基础核心，Spring-boot是建立在Spring-core基础上的项目，Spring-cloud是建立在Spring-boot之上的项目（Spring-boot-start是一系列应用启动项目，Spring-cloud-start是启动项目，这俩都是最少功能的实现，带有parent的项目，是导入了所有的依赖，这个不好，还是看项目需要啥，再添加） -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.SR2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.1.8.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
                <version>${spring-cloud-starter-serial.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${spring-cloud-starter-serial.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
                <version>${spring-cloud-starter-serial.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud-starter-serial.version}</version>
            </dependency>

            <!-- Database Driver -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>

            <!-- ORM -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>

            <!-- Database Connection Pool -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikariCP.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- Database Middleware -->
            <dependency>
                <groupId>io.shardingjdbc</groupId>
                <artifactId>sharding-jdbc-core</artifactId>
                <version>${sharding-jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-jdbc-orchestration</artifactId>
                <version>${sharding-jdbc-orchestration}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- Unify Base Dependencies -->
    <dependencies>
        <!-- Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>${spring-boot-starter-serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot-starter-serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot-starter-serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.test.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.serial.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.serial.version}</version>
        </dependency>

        <!-- Gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.58</version>
        </dependency>

        <!-- 测试框架依赖（集中测试框架都写上，用哪个随便） -->
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>4.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>2.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmockit</groupId>
            <artifactId>jmockit</artifactId>
            <version>1.46</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.27.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
    </dependencies>

    <!-- 构建定义 -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>rebel*.xml</exclude>
                </excludes>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.yaml</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.jsp</include>
                    <include>**/*.ftl</include>
                    <include>**/*.html</include>
                    <include>**/*.js</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!-- clean插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <verbose>true</verbose>
                    <failOnError>true</failOnError>
                    <detail>true</detail>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/target/*</directory>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/src/main/docker</directory>
                            <includes>*.${project.packaging}</includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- compile（编译）插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <excludes>
                        <exclude>rebel*.xml</exclude>
                    </excludes>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                    <compilerVersion>1.8</compilerVersion>
                    <verbose>true</verbose>
                    <optimize>true</optimize>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <detail>true</detail>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <show>public</show>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <doclint>none</doclint>
                    <links>
                        <link>http://docs.oracle.com/javase/8/docs/api</link>
                    </links>
                </configuration>
            </plugin>
            <!-- surefire（测试）插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.9.RELEASE</version>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <outputDirectory>${project.basedir}/src/main/docker</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>build-tag-push-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <detail>true</detail>
                    <registryUrl>localhost:65535</registryUrl>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <imageName>localhost:65535/${project.artifactId}:${project.version}</imageName>
                </configuration>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <detail>true</detail>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <excludes>
                        <exclude>rebel*.xml</exclude>
                    </excludes>
                    <!--<archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>-->
                    <archive>
                        <manifest>
                            <addClasspath/>
                            <addDefaultEntries/>
                            <addDefaultImplementationEntries/>
                            <addDefaultSpecificationEntries/>
                            <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                            <packageName/>
                            <mainClass/>
                        </manifest>
                        <manifestEntries>
                            <Created-By>${project.organization.name}</Created-By>
                            <Build-Jdk-Spec>${java.specification.version}</Build-Jdk-Spec>
                            <Implementation-Title>${project.artifactId}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                            <Specification-Title>${project.artifactId}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Manifest-Version>${project.version}</Manifest-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!-- assembly（自定义打包）插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <skipAssembly>true</skipAssembly>
                </configuration>
            </plugin>
            <!-- 依赖包操作插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>rebel*.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- install（安装）插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <file>${project.build.directory}/${project.artifactId}-${project.version}.${project.packaging}</file>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <packaging>${project.packaging}</packaging>
                    <localRepositoryPath>${LocalMavenRepositoryPath}</localRepositoryPath>
                    <detail>true</detail>
                    <generatePom>true</generatePom>
                </configuration>
            </plugin>
            <!-- site插件（发布站点） -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <detail>true</detail>
                    <finalName>${project.artifactId}-${project.version}.${project.packaging}</finalName>
                </configuration>
            </plugin>
            <!-- deploy插件（部署项目到制品仓库） -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <file>${project.build.directory}/${project.build.finalName}.${project.packaging}</file>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <packaging>${project.packaging}</packaging>
                    <repositoryId>${project.distributionManagement.repository.id}</repositoryId>
                    <url>${project.distributionManagement.repository.url}</url>
                    <retryFailedDeploymentCount>5</retryFailedDeploymentCount>
                    <deployAtEnd>true</deployAtEnd>
                    <detail>true</detail>
                    <pomFile>${project.basedir}/pom.xml</pomFile>
                    <updateReleaseInfo>true</updateReleaseInfo>
                    <description>This is ${project.artifactId}</description>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 远程仓库 -->
    <repositories>
        <repository>
            <id>central</id>
            <name>阿里公共仓库</name>
            <url>https://maven.aliyun.com/repository/central</url>
            <layout>default</layout>
            <releases>
                <updatePolicy>always</updatePolicy>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>jcenter</id>
            <name>jcenter库</name>
            <url>https://maven.aliyun.com/repository/jcenter</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>Central</id>
            <name>中央仓库</name>
            <url>http://central.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <!-- 项目部署配置（制品仓库） -->
    <distributionManagement>
        <repository>
            <id>project_pistachio</id>
            <name>Pistachio项目包部署远程仓库</name>
            <url>http://localhost:8081/repository/project_pistachio/</url>
        </repository>
    </distributionManagement>

    <!-- 配置文件 -->
    <profiles>
        <profile>
            <id>forDevelopEnvironment</id>
        </profile>
        <profile>
            <id>forTestEnvironment</id>
        </profile>
        <profile>
            <id>forProductionEnvironment</id>
        </profile>
    </profiles>
</project>